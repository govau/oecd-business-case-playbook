# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:

  deploy-staging:
    docker:
      - image: govau/cf-cli
    working_directory: ~/oecd
    steps:
      - checkout
      - run:
          name: Deploy staging to cloud.gov.au
          command: |
            cd ~/oecd
            cp .deploy/manifest-staging.yml _site/
            cd _site/
            cf login -a $CF_API_STAGING -o $CF_ORG -s $CF_SPACE -u $CF_USERNAME -p $CF_PASSWORD_STAGING
            cf zero-downtime-push oecd -f manifest-staging.yml

  deploy-test:
    docker:
      - image: govau/cf-cli
    working_directory: ~/oecd
    steps:
      - checkout
      - run:
          name: Deploy test to cloud.gov.au
          command: |
            cd ~/oecd
            cp .deploy/manifest-test.yml _site/
            cd _site/
            cf login -a $CF_API_STAGING -o $CF_ORG -s $CF_SPACE -u $CF_USERNAME -p $CF_PASSWORD_STAGING
            cf zero-downtime-push oecd-$CIRCLE_BRANCH -f manifest-test.yml

  deploy-prod:
    docker:
      - image: govau/cf-cli
    working_directory: ~/oecd
    steps:
      - checkout
      - run:
          name: Deploy prod to cloud.gov.au
          command: |
            cd ~/oecd
            cp .deploy/manifest-prod.yml _site/
            cd _site/
            cf login -a $CF_API_PROD -o $CF_ORG -s $CF_SPACE -u $CF_USERNAME -p $CF_PASSWORD_PROD
            cf zero-downtime-push oecd -f manifest-prod.yml


workflows:
  version: 2
  deploy-oecd:
    jobs:
      - deploy-staging: # run deploy staging
          filters:
            branches:
              only: develop # and only on the `develop` branch

      - deploy-prod: # run deploy staging
          filters:
            branches:
              only: master # and only on the `master` branch

      - deploy-test: # run deploy text
          filters:
            branches:
              only: /.*-test/ # and only on branches ending in -test
